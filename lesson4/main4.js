//**********************************************************************************************************************

//   1) створити функцію яка приймає масив та виводить його
//
// let accepts = [34, 5, 21, 23, 44, 65];
//
// function masAccepts(mas) {
//     console.log(mas);
//     return accepts;
// }
//
// masAccepts(accepts);
//**********************************************************************************************************************

//2) створити функцію яка заповнює масив рандомними числами та виводить його.
// Для виведення використати попередню функцію.
//
// let empty = [];
//
// function masEmpty(mas) {
//     for (let i = 0; i < 10; i++) {
//         empty[i] = Math.random();
//     }
//     console.log(mas);
//     return empty;
// }
//
// masEmpty(empty);
//**********************************************************************************************************************

//3) створити функцію яка приймає три числа та виводить найменьше. (Без Math.min!)
//
// function minNumbers(a=1, b=2, c=3) {
//     let min;
//     if (a <= b && a <= c) min = a;
//     if (b <= a && b <= c) min = b;
//     if (c <= a && c <= b) min = c;
//     return min;
// }
//
// let min = minNumbers(20, 10, 30);
// console.log(min);
//**********************************************************************************************************************

//4) створити функцію яка приймає три числа та виводить найбільше. (Без Math.max!)
//
// function minNumbers(a = 1, b = 2, c = 3) {
//     let max;
//     if (b <= a && c <= a) max = a;
//     if (a <= b && c <= b) max = b;
//     if (a <= c && b <= c) max = c;
//
//
//     return max;
// }
//
// let max = minNumbers(200, 50, 30);
// console.log(max);
//
//**********************************************************************************************************************

//5) створити функцію яка повертає найбільше число з масиву
//
// function numbers1(arrNumbers1 = []) {
//     let max = arrNumbers1[0];
//     for (let i = 0; i < arrNumbers1.length; i++) {
//         if (arrNumbers1[i] > max) {
//             max = arrNumbers1[i];
//         }
//     }
//     return max;
// }
//
// let minNumbers1 = numbers1([543,986,123]);
// console.log(minNumbers1);
//
//**********************************************************************************************************************

//6) створити функцію яка повертає найменьше число з масиву
//
//
// function numbers(arrNumbers = []) {
//     let min = arrNumbers[0];
//     for (let i = 0; i < arrNumbers.length; i++) {
//         if (arrNumbers[i] < min) {
//             min = arrNumbers[i];
//         }
//     }
//     return min;
// }
//
// let minNumbers = numbers([23,1,4,8,2]);
// console.log(minNumbers);
//
//**********************************************************************************************************************

//7) створити функцію яка приймає масив чисел, сумує значення елементів масиву та повертає його.
//
// function argMas() {
//     let sum = 0;
//     for (let argument of arguments) {
//         sum += argument;
//     }
//     console.log(sum);
//     return sum;
// }
//
// argMas(23, 54, 11, 54, 665, 21, 54, 843);
//
//**********************************************************************************************************************

//8) створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
//
// function argMas1() {
//     let sum1 = 0;
//     for (let argument1 of arguments) {
//         sum1 += argument1;
//     }
//     console.log(sum1 / arguments.length);
//     return sum1;
// }
//
// argMas1(23, 345, 54, 11, 54, 665, 221, 154, 843);
//
//**********************************************************************************************************************

//9) Створити функцію яка приймає масив будь яких объектів, та повертає масив ключів всіх обєктів
// EXAMPLE:
// [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ name, age, model ]
//----------------------------------------------------------------------------------------/
//
// let masIndex = [{name: 'Dimas', age: 13}, {model: 'Camry'}];
// const returns = (array) => {
//     let result = [];
//     for (let ObjElement of array) {
//         for (let keys in ObjElement) {
//             result.push(keys);
//         }
//     }
//
//     return result;
// }
// console.log(returns(masIndex));
//
//
//**********************************************************************************************************************

//10) Створити функцію яка приймає масив будь яких объектів, та повертає масив значень всіх обєктів
// EXAMPLE:
// [{name: 'Dima', age: 13}, {model: 'Camry'}]  ===> [ Dima, 13, Camry ]
//----------------------------------------------------------------------------------/
//
// let masIndex1 = [{name: 'Dimas', age: 13}, {model: 'Camry'}];
// const returns1 = (array) => {
//     let result = [];
//     for (let ObjElement of array) {
//         for (let keys in ObjElement) {
//             result.push(ObjElement[keys]);
//         }
//     }
//
//     return result;
// }
// console.log(returns1(masIndex1));
//
//**********************************************************************************************************************

//11) створити функцію  яка скаладає значення елементів з однаковими індексами  та повертає новий результуючий масив.
//   EXAMPLE:
//   [1,2,3,4]
//   [2,3,4,5]
//   результат
//   [3,5,7,9]
//----------------------------------------------------------------/
//
// function isTheValue(mas1, mas2) {
//     let mas3 = [];
//     for (let i = 0; i < mas1.length; i++) {
//         mas3.push(mas1[i] + mas2[i]);
//     }
//     return mas3;
// }
//
// let isTheValue1 = isTheValue([1, 2, 3, 4], [2, 3, 4, 5]);
// console.log(isTheValue1);


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//   1. - створити функцію яка приймає будь-яку кількість чисел,
//        повертає найменьше, а виводить найбільше (Math використовувати заборонено);
//
//
// function numbers() {
//     let min = arguments[0];
//     let max = arguments[0];
//
//     for (let i = 0; i < arguments.length; i++) {
//         if (arguments[i] < min) {
//             min = arguments[i];
//         }
//         if (arguments[i] > max) {
//             max = arguments[i];
//         }
//     }
//     console.log(max);
//     return min;
// }
//
// let masMinMax = numbers(45, 24, 67, 8, 9, 543, 78, 64, 32, 998);
// console.log(masMinMax);
//
//
//
//**********************************************************************************************************************

//    2. - Взяти задачі з завдання 10 та 9 та обєднати їх в одну динамічну функцію.
//         Що б я міг сам вибрати повернути мені масив ключів чи масив значень.
//-------------------------------------------------------------------------------------------------/
//
// let masIndex = [{name: 'Dimas', age: 13}, {model: 'Camry'}];
// const returns = (array, boolean) => {
//     let result = [];
//     if (boolean) {
//         for (let keyElement of array) {
//             for (let keys in keyElement) {
//                 result.push(keys);
//             }
//         }
//     } else {
//         for (let ObjElement of array) {
//             for (let keys in ObjElement) {
//                 result.push(ObjElement[keys]);
//             }
//         }
//     }
//     return result;
// }
// console.log(returns(masIndex));
// console.log(returns(masIndex,true));
//
//**********************************************************************************************************************

//   3.  - Приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
//         EXAMPLE:
//         foo([9,8,0,4], 0) // ==> [ 8, 9, 0, 4 ]
//         foo([9,8,0,4], 1) // ==> [ 9 ,0, 8, 4 ]
//         foo([9,8,0,4], 2) // ==> [ 9, 8, 4, 0 ]
//-----------------------------------------------------------------//
// let mas = [9, 8, 0, 4];
// let mas2 = [9, 8, 0, 4];
// let mas3 = [9, 8, 0, 4];
//
// function changesPlaces(arr, index) {
//     let array = [...arr];
//     if (index < array.length - 1) {
//         let temp = array[index];
//         array[index] = array[index + 1];
//         array[index + 1] = temp;
//     }
//     return array;
// }
//
// console.log(changesPlaces(mas,0));
// console.log(changesPlaces(mas2,1));
// console.log(changesPlaces(mas3,2));
//
//
//**********************************************************************************************************************

//  4.  - Сворити функцію яка буде переносити елементи з значенням 0 у кінець маисву.
//        Зберігаючи при цьому порядок не нульових значень.
//        Двожина масиву від 2 до 100
//        EXAMPLE:
//        [1,0,6,0,3] => [1,6,3,0,0]
//        [0,1,2,3,4] => [1,2,3,4,0]
//        [0,0,1,0]   => [1,0,0,0]
//------------------------------------------------------------------//
//
// function transfer(mas) {
//     let number = [];
//     let zero = [];
//     for (const item of mas) {
//         if (item === 0) {
//             zero.push(0);
//         } else {
//             number.push(item);
//         }
//     }
//     return number.concat(zero);
// }
//
// console.log(transfer([1, 0, 6, 0, 3]));
// console.log(transfer([0, 1, 2, 3, 4]));
// console.log(transfer([0, 0, 1, 0]));
//
//**********************************************************************************************************************

//  5.   - Дано список імен.
//         let n1 = '    Harry       Potter      '
//         let n2 = '    Ron       Whisley      '
//         let n3 = '    Hermione       Granger      '
//         Написати функцію, яка приймає будь яке не валідне імя, та нормалізує його в наступнйи вигляд
//         let n1 = 'Harry Potter'
//         let n2 = 'Ron Whisley'
//         let n3 = 'Hermione Granger'
//============================================//
//
// let n1 = '    Harry       Potter      '
// let n2 = '    Ron       Whisley      '
// let n3 = '    Hermione       Granger      '
//
// function normalizes() {
//
//     for (let i = 0; i < arguments.length; i++) {
//         let mas = arguments[i].trim();
//         let newMas = mas.split('       ');
//         let oneMas = newMas.join(' ');
//         console.log(oneMas);
//     }
// }
//
// normalizes(n1, n2, n3);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// ******************* НАЗАД В МИНУЛЕ *********************** //
//
//**********************************************************************************************************************

// 1. Створити функцію яка :
// -  Додає в боді блок з текстом "Hello owu"
//
// function addsText() {
//
//     let addsDiv = document.createElement('p');
//     document.body.appendChild(addsDiv);
//     addsDiv.innerHTML = 'Hello owu';
//
// }
//
// addsText();
//
//**********************************************************************************************************************

// 2. Створити функцію яка :
// -  Додає в боді елемент з текстом . Тип елементу та текст отримати через аргументи
//
// function addsDiv(text='Text', typeTag='p') {
//     const tag = document.createElement(typeTag);
//      tag.innerHTML = text;
//      document.body.appendChild(tag);
//
// }
//
// addsDiv('Hello man', 'div');
// addsDiv();
//
//
//
//**********************************************************************************************************************

// 3. Створити функцію яка :
// -  приймає масив автомобілів (можна взяти з попередніх дз ),
//    та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
//    Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали.
//    Всі властивості авто в обному блоці





//**********************************************************************************************************************
//  4. Створити функцію яка :
//  -  приймає масив автомобілів (можна взяти з попередніх дз ),
//     та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
//     Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали.
//     Для кожної властивості створити всередені блока автомоблія свій блок

























